server:
  servlet:
    context-path: /api/storage-service
  port: 8084
  forward-headers-strategy: framework

spring:
  application:
    name: storage-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWK_URI:https://qaisar.online:8843/realms/cupid-meet-dev/protocol/openid-connect/certs}
  cloud:
    aws:
      region:
        static: 'null'
      credentials:
        access-key: ${S3_ACCESS_KEY:minioadmin}
        secret-key: ${S3_SECRET_KEY:minioadmin}
      s3:
        path-style-access-enabled: true
        endpoint: ${S3_ENDPOINT:http://localhost:9000}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:cupid-meet}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: true
    default-schema: storage
    liquibase-schema: develop
    change-log: db/changelog/changelog.xml
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

buckets:
  cupid: ${MINIO_BUCKET_NAME:cupid-meet}
  qr: ${MINIO_QR_BUCKET_NAME:qr-code}

contentDisposition: attachment

scheduler:
  cleanup:
    cron: 0 0 0 * * MON

grpc:
  server:
    port: 8801

management:
  server:
    port: 8090
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, info, prometheus, loggers

application:
  authRoles: cupid.meet@storage-service_write
  authRolesViewer: cupid.meet@storage-service_read
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

keycloak:
  auth-server-url: ${KEYCLOAK_SERVER_URL:https://qaisar.online:8843/auth}
  realm: ${KEYCLOAK_REALM:cupid-meet-dev}
  resource: ${KEYCLOAK_CLIENT:cupid-meet-dev}
  bearer-only: true

logging:
  level:
    org.springframework.security: DEBUG
